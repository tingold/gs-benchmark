<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">


    

    <context:property-placeholder location="file:benchmark-runner.properties" />
    
    <camel:camelContext xmlns="http://camel.apache.org/schema/spring">
           
      
        <camel:route autoStartup="false" id="resultRoute">
            <camel:from uri="file:./?antInclude=*.jtl&amp;readLock=markerFile&amp;idempotent=true"/>                            
            <camel:split streaming="true">
                <camel:tokenize token="\n" group="100" />
                <camel:unmarshal ref="bindy"/>
                <camel:to uri="bean:resultProcessor?method=processStat"/>                                
            </camel:split>
        </camel:route>
      
      
        <camel:route id="cleanupRoute">        
            <camel:from uri="seda:cleanUp"/>    
            <camel:to uri="bean:del-ws?method=process" />              
        </camel:route>
            
                  
        <camel:route id="processingWatcher">
            <camel:from uri="seda:jobStatus"/>
            <camel:to uri="bean:jobWatcher?method=process"/>
        </camel:route>
        
           <!--<camel:route id="processingRoute" autoStartup="false">            
            <camel:from uri="file:../data?antInclude=**/*.jmx&amp;recursive=true&amp;noop=true"/>            
                <camel:to uri="bean:jmeterrunner?method=process"/>                     
            </camel:route>
        -->
                
        <camel:route id="setupRoute">   
            <camel:from uri="timer://runOnce?repeatCount=1&amp;delay=5000"/>
            <camel:to uri="bean:jmeterconfig?method=process"/>
            <camel:to uri="bean:shp-ds?method=process"/>
            <camel:to uri="bean:db-ds?method=process" />
            <camel:to uri="bean:raster-creator?method=process"/>           
            <camel:log message="Setup Completed" loggingLevel="INFO"/>
            <camel:to uri="bean:jmeterrunner?method=process"/>                     
            <!--<camel:to uri="controlbus:route?routeId=processingRoute&amp;action=start"/>-->
        </camel:route>        
    </camel:camelContext>
    
    
    
    <bean id="bindy" class="org.apache.camel.dataformat.bindy.csv.BindyCsvDataFormat">
        <constructor-arg value="com.boundless.benchmark.data.JTFLine" />
    </bean>
    <bean id="resultProcessor" class="com.boundless.benchmark.data.ResultProcessor"/>
    
    <bean id="gsPublisher" class="it.geosolutions.geoserver.rest.GeoServerRESTPublisher">
        <constructor-arg index="0" value="${geoserverAdminServerURL}"/>
        <constructor-arg index="1" value="${geoserverUsername}"/>
        <constructor-arg index="2" value="${geoserverPassword}"/>
    </bean>
    
    <bean id="gsReader" class="it.geosolutions.geoserver.rest.GeoServerRESTReader">
        <constructor-arg index="0" value="${geoserverAdminServerURL}"/>
        <constructor-arg index="1" value="${geoserverUsername}"/>
        <constructor-arg index="2" value="${geoserverPassword}"/>
    </bean>    
    
    <bean id="jobWatcher" class="com.boundless.benchmark.camel.JobWatcher"/>
    
    
    <bean id="raster-creator" class="com.boundless.benchmark.RasterBasedDataStoreCreator">
        <property name="workspaceName" value="${test.workspace}" />
        <property name="dataDir" value="${local.data.dir}"/>
        <property name="publisher" ref="gsPublisher"/>
        <property name="reader" ref="gsReader"/>
        <property name="deployData" value="${deployData}"/>
    </bean>
    <bean id="shp-ds" class="com.boundless.benchmark.ShapefileBasedDataStoreCreator">
        <property name="workspaceName" value="${test.workspace}" />
        <property name="dataDir" value="${local.data.dir}"/>
        <property name="publisher" ref="gsPublisher"/>
        <property name="reader" ref="gsReader"/>
        <property name="deployData" value="${deployData}"/>
    </bean>
    
    <bean id="del-ws" class="com.boundless.benchmark.GeoserverCleaner">
        <property name="workspaceName" value="${test.workspace}" />        
        <property name="publisher" ref="gsPublisher"/>
        <property name="reader" ref="gsReader"/>
        <property name="deleteOnExit" value="${deleteOnExit}"/>
    </bean>
    
    <bean id="db-ds" class="com.boundless.benchmark.DatabaseBasedDataStoreCreator">
        <property name="dataDir" value="${local.data.dir}"/>
        <property name="workspaceName" value="${test.workspace}"/>
        <property name="dbHost" value="${dbHost}" />
        <property name="dbPort" value="${dbPort}" />
        <property name="dbName" value="${dbName}" />
        <property name="dbUsername" value="${dbUsername}" />
        <property name="dbPassword" value="${dbPassword}" />
        <property name="publisher" ref="gsPublisher"/>
        <property name="reader" ref="gsReader"/>
    </bean>
    
    <bean id="jmeterrunner" class="com.boundless.benchmark.jmeter.JMeterRunner">        
        <property name="propertiesFile" value="benchmark-runner.properties" />
        <property name="jmeterLocation" value="${ps.jmeter.dir}" />
    </bean>
    <bean id="jmeterconfig" class="com.boundless.benchmark.jmeter.JMeterConfigurator">                
        <property name="jmeterLocation" value="${ps.jmeter.dir}" />
    </bean>
    
    
</beans>
